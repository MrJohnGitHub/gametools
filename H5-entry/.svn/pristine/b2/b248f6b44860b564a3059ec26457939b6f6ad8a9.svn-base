var __reflect = (this && this.__reflect) || function (p, c, t) {
    p.__class__ = c, t ? t.push(c) : t = [c], p.__types__ = p.__types__ ? t.concat(p.__types__) : t;
};
var __extends = this && this.__extends || function __extends(t, e) { 
 function r() { 
 this.constructor = t;
}
for (var i in e) e.hasOwnProperty(i) && (t[i] = e[i]);
r.prototype = e.prototype, t.prototype = new r();
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var YueWanPlatform = (function (_super) {
    __extends(YueWanPlatform, _super);
    function YueWanPlatform() {
        var _this = _super.call(this) || this;
        _this.sdk = new window.JSLIB();
        return _this;
    }
    YueWanPlatform.prototype.initBackStage = function () {
        this.backUrlAddr = "106.52.221.23:8090";
        this.backUrlKey = "4c4776e8db27d196ae19ddbb60143488";
    };
    YueWanPlatform.prototype.login = function () {
        var _this = this;
        return new Promise(function (resolve, reject) {
            var sdk = _this.sdk;
            sdk.getUser(function (user) { return __awaiter(_this, void 0, void 0, function () {
                var session_id, loginCheckAddr, data;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            console.log(user.session_id); //user.session_id即临时通行码，用以获取用户信息接口的参数.
                            console.log(user.type); //既j_game_id  用以判断哪个包（选用）
                            console.log(user.os); //判断ios或者android平台（选用）
                            console.log(user.devicetype); //设备型号（选用）
                            session_id = user.session_id;
                            loginCheckAddr = BackStageReqUtils.getYueWanLoginAddr() + "?authorize_code=" + session_id;
                            return [4 /*yield*/, BackStageReqUtils.sendBackStageReq(loginCheckAddr)];
                        case 1:
                            data = _a.sent();
                            if (data.ret == 1) {
                                this.userID = data.content.user_id;
                                this.userName = data.content.user_name;
                                this.time = data.content.time;
                                this.token = data.content.token;
                                sdk.setUser({ session_id: data.content.access_token, uid: this.userID, name: this.userName });
                                sdk.shutDown("shutDown");
                                resolve();
                            }
                            return [2 /*return*/];
                    }
                });
            }); });
        });
    };
    return YueWanPlatform;
}(SimplePlatform));
__reflect(YueWanPlatform.prototype, "YueWanPlatform");
//# sourceMappingURL=YueWanPlatform.js.map